package com.epam.rd.autocode.assessment.appliances.controller;

import com.epam.rd.autocode.assessment.appliances.model.Client;
import com.epam.rd.autocode.assessment.appliances.service.ClientService;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PostMapping;

import java.util.Random;

@Controller
public class AuthController {

    private final ClientService clientService;

    // üîó –Ü–Ω–∂–µ–∫—Ç–∏–º–æ —Å–µ—Ä–≤—ñ—Å –¥–ª—è —Ä–æ–±–æ—Ç–∏ –∑ –∫–ª—ñ—î–Ω—Ç–∞–º–∏
    public AuthController(ClientService clientService) {
        this.clientService = clientService;
    }

    // üìÑ –ü–æ–∫–∞–∑–∞—Ç–∏ —Ñ–æ—Ä–º—É —Ä–µ—î—Å—Ç—Ä–∞—Ü—ñ—ó
    @GetMapping("/register")
    public String showRegistrationForm(Model model) {
        model.addAttribute("client", new Client()); // –¥–æ–¥–∞—Ç–∏ –ø–æ—Ä–æ–∂–Ω—ñ–π –æ–±‚Äô—î–∫—Ç –¥–ª—è –∑–∞–ø–æ–≤–Ω–µ–Ω–Ω—è —Ñ–æ—Ä–º–∏
        System.out.println("showRegistrationForm() method called. Client object added to the model. Client object: " + model.getAttribute("client") + "");
        return "entrance/register"; // Thymeleaf-—à–∞–±–ª–æ–Ω register.html
    }

    // üìù –û–±—Ä–æ–±–∏—Ç–∏ —Ä–µ—î—Å—Ç—Ä–∞—Ü—ñ—é –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
    @PostMapping("/register")
    public String registerClient(@ModelAttribute("client") Client client) {
        // üß† –ì–µ–Ω–µ—Ä—É—î–º–æ –±–æ–Ω—É—Å–Ω—É –∫–∞—Ä—Ç—É (–º–æ–∂–µ—à –≤–∏–Ω–µ—Å—Ç–∏ —Ü–µ –≤ —Å–µ—Ä–≤—ñ—Å ‚Äî –Ω–µ –∫—Ä–∏—Ç–∏—á–Ω–æ)
        String bonusCard = generateRandomCardNumber();
        client.setCard(bonusCard);

        // üîê –í–∏–∫–ª–∏–∫–∞—î–º–æ —Å–µ—Ä–≤—ñ—Å, –¥–µ –ø–∞—Ä–æ–ª—å —Ö–µ—à—É—î—Ç—å—Å—è –π —é–∑–µ—Ä –∑–±–µ—Ä—ñ–≥–∞—î—Ç—å—Å—è –≤ –±–∞–∑—É
        clientService.register(client);
        System.out.println("Client registered: " + client.getEmail() + " with card: " + client.getPassword() + "");
        // ‚úÖ –ü—ñ—Å–ª—è —Ä–µ—î—Å—Ç—Ä–∞—Ü—ñ—ó –ø–µ—Ä–µ–∫–∏–¥—É—î–º–æ –Ω–∞ –ª–æ–≥—ñ–Ω
        return "redirect:/login";
    }

    // üîê –ü–æ–∫–∞–∑–∞—Ç–∏ —Ñ–æ—Ä–º—É –ª–æ–≥—ñ–Ω—É (Spring Security —Å–∞–º –æ–±—Ä–æ–±–∏—Ç—å POST /login)
    @GetMapping("/login")
    public String showLoginForm() {
        System.out.println("showLoginForm() method called. Client object added to the model. Client object: " + "null" + "");
        return "entrance/login";
    }

    // üè† –ü–æ–∫–∞–∑–∞—Ç–∏ –≥–æ–ª–æ–≤–Ω—É —Å—Ç–æ—Ä—ñ–Ω–∫—É –ø—ñ—Å–ª—è –≤—Ö–æ–¥—É
    @GetMapping("/main")
    public String showMainPage() {
        System.out.println("showMainPage() method called. Client object added to the model. Client object: " + "null" + "");
        return "index"; // –º–æ–∂–µ—à —Å—Ç–≤–æ—Ä–∏—Ç–∏ index.html –¥–ª—è —Ç–µ—Å—Ç—É
    }

    // üî¢ –ú–µ—Ç–æ–¥ –≥–µ–Ω–µ—Ä–∞—Ü—ñ—ó –∫–∞—Ä—Ç–∫–∏ (–º–æ–∂–Ω–∞ –∑–∞–ª–∏—à–∏—Ç–∏ —Ç—É—Ç –∞–±–æ –≤–∏–Ω–µ—Å—Ç–∏ –≤ —Å–µ—Ä–≤—ñ—Å)
    private String generateRandomCardNumber() {
        Random random = new Random();
        StringBuilder card = new StringBuilder();
        for (int i = 0; i < 10; i++) {
            card.append(random.nextInt(10));
        }
        System.out.println("Generated card number: " + card.toString() + "");
        return card.toString();
    }
}